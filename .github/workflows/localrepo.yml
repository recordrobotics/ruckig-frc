# Simple workflow for deploying static content to GitHub Pages
name: Deploy local repo using GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  workflow_run:
    workflows: ["Build and Publish JNI Library"]
    types:
      - completed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Download local maven repository
        uses: actions/download-artifact@v4
        with:
          path: docs/vendordep/vendordep/repos/releases
          name: maven-deploy
      - name: Generate directory indexes
        working-directory: ./docs
        run: |
          repo_name="${GITHUB_REPOSITORY##*/}"
          find ./ -type d | while read dir; do 
            # Remove leading ./
            relpath="${dir#./}"
            # If root, use repo name only
            if [ -z "$relpath" ]; then
              display_path="$repo_name"
            else
              display_path="$repo_name/$relpath"
            fi
            (
              echo '<!DOCTYPE html>'
              echo '<html>'
              echo ''
              echo '<head>'
              echo '  <title>Record Robotics Repository: '$display_path'</title>'
              echo '  <meta name="viewport" content="width=device-width, initial-scale=1.0">'

              echo '  <style>'
              echo 'body { background: #fff; }'
              echo '  </style>'
              echo '</head>'
              echo ''
              echo '<body>'
              echo '  <header>'
              echo '    <h1>'$display_path'</h1>'
              echo '  </header>'
              echo '  <hr/>'
              echo '  <main>'
              echo '    <pre id="contents">'
              echo '<a href="../">../</a>'
              for f in "$dir"/*; do
                [ -e "$f" ] || continue
                fname=$(basename "$f")
                [ "$fname" = "index.html" ] && continue
                mtime=$(date -u -r "$f" +"%Y-%m-%d %H:%M")
                if [ -d "$f" ]; then
                  fsize="-"
                else
                  fsize=$(stat -c %s "$f" 2>/dev/null || stat -f %z "$f" 2>/dev/null)
                fi
                printf '<a href="%s" title="%s">%s</a> %30s %10s\n' "$fname" "$fname" "$fname" "$mtime" "$fsize"
              done
              echo '    </pre>'
              echo '  </main>'
              echo '  <hr/>'
              echo '</body>'
              echo ''
              echo '</html>'
            ) > "$dir/index.html"
          done
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload docs/ repository
          path: './docs/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
